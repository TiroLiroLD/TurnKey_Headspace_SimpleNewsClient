// Mocks generated by Mockito 5.4.4 from annotations
// in simple_news_client/test/services/news_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:simple_news_client/helpers/database_helper_interface.dart'
    as _i6;
import 'package:simple_news_client/models/article.dart' as _i4;
import 'package:simple_news_client/models/source.dart' as _i5;
import 'package:simple_news_client/repositories/news_repository_interface.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [INewsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockINewsRepository extends _i1.Mock implements _i2.INewsRepository {
  MockINewsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Article>> fetchArticles(
          {required Map<String, String>? parameters}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchArticles,
          [],
          {#parameters: parameters},
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);

  @override
  _i3.Future<List<_i5.Source>> fetchSources() => (super.noSuchMethod(
        Invocation.method(
          #fetchSources,
          [],
        ),
        returnValue: _i3.Future<List<_i5.Source>>.value(<_i5.Source>[]),
      ) as _i3.Future<List<_i5.Source>>);
}

/// A class which mocks [IDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockIDatabaseHelper extends _i1.Mock implements _i6.IDatabaseHelper {
  MockIDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> insertArticle(_i4.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #insertArticle,
          [article],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateArticle(_i4.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #updateArticle,
          [article],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.Article?> getArticleByUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #getArticleByUrl,
          [url],
        ),
        returnValue: _i3.Future<_i4.Article?>.value(),
      ) as _i3.Future<_i4.Article?>);

  @override
  _i3.Future<void> deleteArticle(String? url) => (super.noSuchMethod(
        Invocation.method(
          #deleteArticle,
          [url],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Article>> fetchSavedArticles() => (super.noSuchMethod(
        Invocation.method(
          #fetchSavedArticles,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);

  @override
  _i3.Future<List<_i4.Article>> fetchSavedArticlesOrderedByDate() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSavedArticlesOrderedByDate,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);

  @override
  _i3.Future<List<_i4.Article>> fetchArticlesBySource(String? sourceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchArticlesBySource,
          [sourceId],
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);

  @override
  _i3.Future<List<_i4.Article>> getBookmarkedArticles() => (super.noSuchMethod(
        Invocation.method(
          #getBookmarkedArticles,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);

  @override
  _i3.Future<void> setLastUpdateTimestamp(
    String? sourceId,
    DateTime? timestamp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLastUpdateTimestamp,
          [
            sourceId,
            timestamp,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<DateTime?> getLastUpdateTimestamp(String? sourceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastUpdateTimestamp,
          [sourceId],
        ),
        returnValue: _i3.Future<DateTime?>.value(),
      ) as _i3.Future<DateTime?>);
}
